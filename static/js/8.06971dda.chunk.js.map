{"version":3,"sources":["assets/message.mp3","assets/starttune.mp3","assets/trading.jpg","components/Popup.js","components/Modal/Modal.js","components/reuseable/BidderLotComponent.js","components/reuseable/LotListComponent.js","pages/auction/Bidders.js","pages/Bidders.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["Popup","_ref","isOpen","onClose","_jsx","className","children","_jsxs","src","trading","width","alt","ModalBroker","props","closeOnEscapeKeyDown","e","charCode","keyCode","useEffect","document","body","addEventListener","removeEventListener","_Fragment","CSSTransition","in","show","unmountOnExit","timeout","enter","exit","onClick","stopPropagation","title","scope","filteredData","map","el","index","lot","factory_name","maximum_bid","buyer_name","sold_status","BidderLotComponent","handleKeyPress","uId","shareBid","openShareBid","sl","time","users","manualmode","formatTime","selectedIndex","handleInputChange","addBid","handleInc","disabledButtons","setSelectedIndex","setManualmode","invoice","price","concat","pkgs","buyer","link_id","autoComplete","type","id","name","value","onKeyPress","event","onChange","Number","style","backgroundColor","color","fontSize","s_buyer","s_buyer_name","disabled","FaHandPaper","includes","LotListComponent","list","startIndex","endIndex","slice","socket","io","connect","process","Bidders","_useState","useState","_useState2","_slicedToArray","setShow","API_URL","dispatch","useDispatch","auction_data","useSelector","state","auction","usersString","localStorage","getItem","JSON","parse","_useState3","_useState4","amountBid","setAmountbid","_useState5","_useState6","setManualbidindex","_useState7","_useState8","checkedItemName","setCheckedItemName","_useState9","_useState10","checkedItemid","setCheckedItemid","_useState11","_useState12","activebroker","setActivebroker","_useState13","_useState14","setList","_useState15","_useState16","rawlist","setrawList","_useState17","_useState18","setbuttonLoading","_useState19","_useState20","setDisabledButtons","_useState21","_useState22","_useState23","_useState24","setStartIndex","_useState25","_useState26","setEndIndex","_useState27","_useState28","activeUsers","setActiveUsers","_useState29","_useState30","setVisible","_useState31","_useState32","showPopup","setShowPopup","_useState33","_useState34","setTime","_useState35","_useState36","isRunning","setIsRunning","_useState37","_useState38","loading","setLoading","_useState39","_useState40","bidloading","setbidLoading","_useState41","_useState42","openLot","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","then","response","emit","data","current_brokers","catch","error","console","log","getAllcatalogue","stop","apply","arguments","_ref2","_callee2","_amountBid$index","mxbid","eligiblebid","bidValue","bidsToUpdate","_context2","abrupt","alert","bid","put","t0","_x","_x2","handleFetchData","debounce","handleVisibilityChange","visibilityState","currentPage","Math","floor","_ref3","_callee3","audio","updatedData","_context3","prevDisabledButtons","_toConsumableArray","Audio","music","obj","idx","_objectSpread","key","filter","item","play","btnIndex","finish","_x3","_x4","handleActiveUsers","count","handleStartIndex","handleEndIndex","fetchLatestMessage","on","message","setMessages","off","fetchData","_ref4","_callee4","_response$data$","_context4","sent","userId","hidden","timer","setInterval","clearInterval","isMounted","setTimeout","handleStart","handleStop","handleTimeUpdate","newTime","notify","_ref5","_ref6","intervalId","throttledTick","throttle","minutes","toString","padStart","seconds","filteredDatabrokers","brokers","_useState43","_useState44","messages","height","display","flexDirection","justifyContent","alignItems","ReactLoading","marginTop","fontWeight","Modal","length","date","sale_no","season","short_name","paddingRight","padding","u_id","payload","post","_event$target","target","prevState","updatedState","_defineProperty","history","useNavigate","token","sessionStorage","ViewList","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","i","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty"],"mappings":"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","file":"static/js/8.06971dda.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/message.17f316c9.mp3\";","export default __webpack_public_path__ + \"static/media/starttune.99619dc2.mp3\";","export default __webpack_public_path__ + \"static/media/trading.c31da198.jpg\";","import React from 'react';\r\nimport './Popup.css';\r\nimport trading from '../assets/trading.jpg'\r\nfunction Popup({ isOpen, onClose }) {\r\n\r\n\r\n  return (\r\n  <div className=\"trading container d-flex justify-content-center align-items-center \">\r\n  <div className=\"text-center\">\r\n    <img src={trading} width=\"50%\" alt=\"Image\" className=\"img-fluid\" />\r\n    <h2 className=\"mt-3\">Trading has not yet started!!</h2>\r\n    <p className=\"lead\">Please be advised that trading has not yet begun for the day. If you are attempting to place a trade, please wait until trading commences before doing so. Thank you for your patience and understanding.</p>\r\n    {/* <button className=\"btn btn-primary\">Learn More</button> */}\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Modal.css\";\r\n\r\n\r\nconst ModalBroker = (props) => {\r\n\r\n  // console.log(props);\r\n  const closeOnEscapeKeyDown = e => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\nreturn(\r\n    <>\r\n    <CSSTransition\r\n      in={props.show}\r\n      unmountOnExit\r\n      timeout={{ enter: 0, exit: 300 }}\r\n    >\r\n      <div className=\"modal\" onClick={props.onClose}>\r\n        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">{props.title}</h4>\r\n\r\n           \r\n          </div>\r\n          <div className=\"modal-body\">\r\n\r\n\r\n          <table className=\"modaltable table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Lot</th>\r\n              <th scope=\"col\">Factory</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Bidder</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.filteredData.map((el, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td ><h4>{index + 1}</h4></td>\r\n                  <td><h4>{el.lot}</h4></td>\r\n                  <td><h4>{el.factory_name}</h4></td>\r\n                  <td><h4>{el.maximum_bid}</h4></td>\r\n                  <td><h4>{el.buyer_name}</h4></td>\r\n                  <td>\r\n                    <span className={el.sold_status === 1 ? \"hname\" : el.sold_status === 0 ? \"rname\" : \"rname\"}>\r\n                      {el.sold_status === 1 ? \"Sold\" :  el.sold_status === 0 ?\"Unsold\":\"Pending\"}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button onClick={props.onClose} className=\"btn btn-danger\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ModalBroker;\r\n","import React from \"react\";\r\nimport {\r\n  FaHandPaper,\r\n  FaRegWindowClose,\r\n  FaRegCheckSquare,\r\n} from \"react-icons/fa\";\r\nconst BidderLotComponent = ({\r\n  handleKeyPress,\r\n  uId,\r\n  openShareBid,\r\n  shareBid,\r\n  sl,\r\n  index,\r\n  time,\r\n  el,\r\n  users,\r\n  formatTime,\r\n  manualmode,\r\n  selectedIndex,\r\n  handleInputChange,\r\n  addBid,\r\n  handleInc,\r\n  disabledButtons,\r\n  setSelectedIndex,\r\n  setManualmode,\r\n}) => {\r\n  return (\r\n    <>\r\n    <tr>\r\n      <td className=\"text-center\">\r\n        {el.lot}\r\n        <br />\r\n        {el.invoice}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {el.factory_name}\r\n        {/* <br />\r\n        ({el.grade}) Rating: <span style={{ color: 'purple' }}>({el.lirating_name})</span>\r\n<span style={{ color: 'navy' }}>({el.lrating_name})</span> */}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {el.price}\r\n        <br />\r\n        {`(${el.pkgs})`}\r\n      </td>\r\n      \r\n<td className=\"text-center\">\r\n{el.maximum_bid !== 0 &&(\r\n  <div className=\"bidd_name\">\r\n              <p className=\"highest\">{el.maximum_bid}</p>\r\n              <span className={el.buyer == users.link_id ? \"hname\" : \"rname\"}>\r\n             ({el.maximum_bid - el.price})\r\n              </span>\r\n            </div>\r\n)}\r\n      \r\n           \r\n            <br />\r\n</td>\r\n      <td className=\"text-center\">\r\n        {manualmode === true && selectedIndex === index ? (\r\n          <div className=\"mn-bid col-12\">\r\n            <input\r\n              className=\"form-control m_bid\"\r\n              autoComplete=\"off\"\r\n              type=\"number\"\r\n              id={`name${el.id}`}\r\n              name=\"name\"\r\n              value={el.name}\r\n              onKeyPress={(event) => handleKeyPress(el,event, index)}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n            />\r\n          </div>\r\n        ) : el.maximum_bid === 0 ? (\r\n          <div className=\"mn-bid col-12\">\r\n            {/* <h5 className=\"card-price\">Max.{el.maximum_bid}</h5> */}\r\n            <input\r\n              className=\"form-control m_bid\"\r\n              autoComplete=\"off\"\r\n              type=\"number\"\r\n              id={`name${el.id}`}\r\n              name=\"name\"\r\n              value={el.name}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n           \r\n          </>\r\n        )}\r\n      </td>\r\n \r\n<td className=\"text-center\">\r\n{Number(el.pkgs) > 15 && el.buyer !== 0 && el.buyer !== uId ? (\r\n  <i\r\n    key={el.id}\r\n    onClick={() => shareBid(el.id)}\r\n    className=\"bi bi-share\"\r\n    style={{ backgroundColor: 'blue', color: 'white', fontSize: '14px' }}\r\n  ></i>\r\n) : null}\r\n{Number(el.pkgs) > 15 && el.s_buyer !== 0 && el.buyer !== uId && el.maximum_bid !== 0 && (\r\n  <div className=\"bidd_name\">\r\n    {/* <p className=\"highest\">{el.maximum_bid}</p> */}\r\n    <span className=\"sname\">\r\n      {el.s_buyer_name}({el.maximum_bid - el.price})\r\n    </span>\r\n  </div>\r\n)}\r\n\r\n\r\n\r\n{/* {el.open_share === 0 ? (\r\n            <button key={el.id} onClick={() => openShareBid(el.id)} type=\"\">\r\n              open share\r\n            </button>\r\n          ) : null} */}\r\n</td>\r\n      <td className=\"text-center\" >\r\n        {el.maximum_bid === 0 ? (\r\n          <button\r\n            key={el.id + 10}\r\n            disabled={users.type === \"BIDDER\" ? false : true}\r\n            onClick={() => addBid(el, index)}\r\n            className=\"btn btn-danger square-circle\"\r\n          >\r\n            <FaHandPaper className=\"bid\" />\r\n          </button>\r\n        ) : (\r\n          <div className=\"col-12 \">\r\n            <div className=\"bidcont mb-2 d-flex justify-content-center\">\r\n              {el.sold_status === 1 ? (\r\n                <>\r\n                  <p className=\"sold_st\">SOLD</p>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    key={el.id + 11}\r\n                    disabled={disabledButtons.includes(index)}\r\n                    onClick={() => handleInc(el, index)}\r\n                    className=\" btn-danger square-circle bidbtn\"\r\n                  >\r\n                    +1\r\n                  </button>\r\n                  <button\r\n                    key={el.id}\r\n                    onClick={() => {\r\n                      if (manualmode === true && selectedIndex === index) {\r\n                        addBid(el, index);\r\n                      } else {\r\n                        setManualmode(true);\r\n                        setSelectedIndex(index);\r\n                      }\r\n                    }}\r\n                    className=\" btn-primary square-circle bidbtn\"\r\n                    style={{ fontSize: '10px' }}\r\n                  >\r\n                    <FaHandPaper className=\"bid\" />\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </td>\r\n    </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BidderLotComponent;\r\n","import React from 'react'\r\nimport BidderLotComponent from './BidderLotComponent';\r\nconst LotListComponent = ({\r\n  handleKeyPress,\r\n  uId,\r\n  shareBid,\r\n  openShareBid,\r\n    time,\r\n    list,\r\n    startIndex,\r\n    endIndex,\r\n    users,\r\n    formatTime,\r\n    manualmode,\r\n    selectedIndex,\r\n    handleInputChange,\r\n    addBid,\r\n    handleInc,\r\n    disabledButtons,\r\n    setManualmode,\r\n    setSelectedIndex\r\n  }) => {\r\n    return (\r\n       <>\r\n     \r\n          {list.slice(startIndex, endIndex + 0).map((el, index) => (\r\n            <BidderLotComponent\r\n            handleKeyPress={handleKeyPress}\r\n            uId={uId}\r\n            openShareBid={openShareBid}\r\n            sl={startIndex + index + 1}\r\n            time={time}\r\n            shareBid={shareBid}\r\n              key={el.id + 9}\r\n              el={el}\r\n              index={index}\r\n              setManualmode={setManualmode}\r\n              setSelectedIndex={setSelectedIndex}\r\n              users={users}\r\n              formatTime={formatTime}\r\n              manualmode={manualmode}\r\n              selectedIndex={selectedIndex}\r\n              handleInputChange={handleInputChange}\r\n              addBid={addBid}\r\n              handleInc={handleInc}\r\n              disabledButtons={disabledButtons}\r\n            />\r\n          ))}\r\n      </>\r\n    );\r\n  };\r\n  \r\n\r\nexport default LotListComponent","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Popup from \"../../components/Popup\";\r\nimport axios from \"axios\";\r\nimport music from \"../../assets/message.mp3\";\r\nimport notify from \"../../assets/starttune.mp3\";\r\nimport { getAllcatalogue } from \"../../store/catalogueSlice\";\r\nimport io from \"socket.io-client\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { throttle,debounce } from \"lodash\";\r\nimport LotListComponent from \"../../components/reuseable/LotListComponent\";\r\n\r\nconst socket = io.connect(process.env.REACT_APP_SERVER_URL);\r\nconst Bidders = () => {\r\n  const [show, setShow] = useState(false);\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const dispatch = useDispatch();\r\n  const { auction_data } = useSelector((state) => state.auction);\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const users = JSON.parse(usersString);\r\n  const [amountBid, setAmountbid] = useState([]);\r\n  const [manualbidIndex, setManualbidindex] = useState(\"\");\r\n  const [checkedItemName, setCheckedItemName] = useState(\"\");\r\n  const [checkedItemid, setCheckedItemid] = useState(\"\");\r\n  const [activebroker, setActivebroker] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [rawlist, setrawList] = useState([]);\r\n  const [buttonLoading, setbuttonLoading] = useState(false);\r\n  const [disabledButtons, setDisabledButtons] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [endIndex, setEndIndex] = useState(1);\r\n  const [activeUsers, setActiveUsers] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bidloading, setbidLoading] = useState(false);\r\n  const [manualmode, setManualmode] = useState(false);\r\n\r\n  //manual bid inpput data get\r\n  const handleInputChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    setAmountbid((prevState) => {\r\n      const updatedState = [...prevState];\r\n      updatedState[index] = { ...updatedState[index], [name]: value };\r\n      return updatedState;\r\n    });\r\n    setManualbidindex(index);\r\n    // console.log(manualbidIndex);\r\n  };\r\n\r\n  //bidder modal\r\n  const openLot = async () => {\r\n    await axios\r\n      .get(`${API_URL}/getselectbroker`)\r\n      .then((response) => {\r\n        socket.emit(\"user\", response.data[0].current_brokers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    dispatch(getAllcatalogue);\r\n    setShow(true);\r\n  };\r\n\r\n  //manuall bid data insert\r\n\r\n  const addBid = async (el, index) => {\r\n    const mxbid = el.maximum_bid;\r\n    const percent = mxbid * 0.5;\r\n    const eligiblebid = mxbid + percent;\r\n    const bidValue = amountBid[index]?.name;\r\n  \r\n    if (!bidValue) {\r\n      setManualmode(false);\r\n      return;\r\n    }\r\n  \r\n    if (mxbid !== 0 && bidValue < mxbid) {\r\n      alert(\"Bid value should be greater than or equal to the maximum bid.\");\r\n      return;\r\n    }\r\n  \r\n    if (bidValue > eligiblebid && mxbid !== 0) {\r\n      alert(\"You can only bid up to 50% of the maximum bid.\");\r\n      return;\r\n    }\r\n    setbidLoading(true);\r\n    const bidsToUpdate = {\r\n      id: el.id,\r\n      bid: bidValue,\r\n      buyer: users.link_id,\r\n    };\r\n  \r\n    try {\r\n      await axios.put(`${API_URL}/manualbid`, bidsToUpdate);\r\n      socket.emit(\"user\", activebroker);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setManualmode(false);\r\n    setbidLoading(false);\r\n   \r\n  };\r\n  \r\n  // let timer = null;\r\n  const handleFetchData = debounce(() => {\r\n    axios\r\n      .get(`${API_URL}/getselectbroker`)\r\n      .then((response) => {\r\n        if (response.data[0].auction === 0) {\r\n          setShowPopup(true);\r\n        } else {\r\n          setShowPopup(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        // Handle the error appropriately (e.g., show an error message)\r\n      });\r\n  }, 300);\r\n  // Visibility change handler\r\n  const handleVisibilityChange = () => {\r\n    if (document.visibilityState === \"visible\") {\r\n      // window.location.reload();\r\n      // clearTimeout(timer);\r\n      handleFetchData()\r\n    } else {\r\n      // window.location.reload();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleKeyPress = (el,event,index) => {\r\n    if (event.key === 'Enter') {\r\n      addBid(el, index)\r\n    }\r\n  };\r\n  //sharebid\r\n  \r\n    const shareBid = (id) => {\r\n      // Create a payload object with the data to be sent\r\n      const payload = {\r\n        id: id,\r\n        u_id:users.id\r\n        // Include any other data needed for the request\r\n      };\r\n    console.log(payload.id);\r\n      // Make a POST request using Axios\r\n      axios\r\n        .post(`${API_URL}/updateshareauction`, payload)\r\n        .then((response) => {\r\n          // Handle the response if needed\r\n          socket.emit(\"user\", activebroker);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle the error if needed\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    const openShareBid = (id) => {\r\n      // Create a payload object with the data to be sent\r\n      const payload = {\r\n        id: id,\r\n        u_id:users.id\r\n        // Include any other data needed for the request\r\n      };\r\n\r\n      // Make a POST request using Axios\r\n      axios\r\n        .post(`${API_URL}/enableshareauction`, payload)\r\n        .then((response) => {\r\n          // Handle the response if needed\r\n          socket.emit(\"user\", activebroker);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle the error if needed\r\n          console.error(error);\r\n        });\r\n    };\r\n    \r\n    const currentPage = Math.floor(startIndex / 1) + 1;\r\n  //bid update\r\n  const handleInc = async (el, index) => {\r\n    setDisabledButtons((prevDisabledButtons) => [\r\n      ...prevDisabledButtons,\r\n      index,\r\n    ]);\r\n    setbidLoading(true);\r\n    const audio = new Audio(music);\r\n\r\n    const updatedData = list.map((obj, idx) => {\r\n      if (obj.id === el.id) {\r\n        return {\r\n          ...obj,\r\n          maximum_bid: obj.maximum_bid + 1,\r\n          buyer: users.link_id,\r\n          key: idx,\r\n        };\r\n      }\r\n      return { ...obj, key: idx };\r\n    });\r\n\r\n    const filteredData = updatedData.filter((item) => item.id === el.id);\r\n\r\n    try {\r\n      await axios.put(`${API_URL}/updateauction`, filteredData);\r\n      socket.emit(\"user\", activebroker);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setList(updatedData);\r\n      audio.play();\r\n      setbuttonLoading(false);\r\n      setbidLoading(false);\r\n      setDisabledButtons((prevDisabledButtons) =>\r\n        prevDisabledButtons.filter((btnIndex) => btnIndex !== index)\r\n      );\r\n    }\r\n  };\r\n\r\n  //prev next index check\r\n  useEffect(() => {\r\n    const handleActiveUsers = (count) => {\r\n      setActiveUsers(count);\r\n    };\r\n    const handleStartIndex = (data) => {\r\n      setStartIndex(data);\r\n    };\r\n    const handleEndIndex = (data) => {\r\n      setEndIndex(data);\r\n    };\r\n\r\n    fetchLatestMessage();\r\n\r\n  socket.on('newMessage', (message) => {\r\n  setMessages(message)\r\n  });\r\n\r\n    socket.on(\"activeUsers\", handleActiveUsers);\r\n    socket.on(\"startIndex\", handleStartIndex);\r\n    socket.on(\"endIndex\", handleEndIndex);\r\n    socket.emit(\"getObjects\");\r\n    return () => {\r\n      socket.off(\"activeUsers\", handleActiveUsers);\r\n      socket.off(\"startIndex\", handleStartIndex);\r\n      socket.off(\"endIndex\", handleEndIndex);\r\n      socket.off(\"newMessage\");\r\n      // socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      const { auction, current_brokers, name, id } = response.data[0];\r\n      \r\n      if (auction === 0) {\r\n        setShowPopup(true);\r\n      } else {\r\n        setShowPopup(false);\r\n      }\r\n  \r\n      setCheckedItemName(name);\r\n      setCheckedItemid(id);\r\n      setActivebroker(current_brokers);\r\n  \r\n      socket.emit(\"user\", current_brokers);\r\n  \r\n      // socket.emit(\"user_toggle\", current_brokers); need\r\n      socket.on(\"user_toggle\", (userId) => {\r\n        setVisible(userId === users.link_id);\r\n      });\r\n  \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // const socket = io.connect(process.env.REACT_APP_SERVER_URL);\r\n    // Listen for 'startIn' event\r\n    socket.on('startIn', (startIndex) => {\r\n      setStartIndex(startIndex);\r\n    });\r\n\r\n    // Listen for 'endIn' event\r\n    socket.on('endIn', (endIndex) => {\r\n      setEndIndex(endIndex);\r\n    });\r\n\r\n    // Listen for 'visibilitychange' event to handle page visibility changes\r\n    const handleVisibilityChange = () => {\r\n      if (!document.hidden) {\r\n        // Page is visible, request the updated 'endIndex' value\r\n        socket.emit('getEndIndex');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n\r\n    // Set up a timer to periodically request the updated 'endIndex' value\r\n    const timer = setInterval(() => {\r\n      socket.emit('getEndIndex');\r\n    }, 5000); // Adjust the interval as needed\r\n\r\n    // Clean up the socket connection and event listener when the component unmounts\r\n    return () => {\r\n      // socket.disconnect();\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    let isMounted = true; // Add a flag to track if the component is mounted\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n\r\n    const handleStart = () => {\r\n      setIsRunning(true);\r\n    };\r\n\r\n    const handleStop = () => {\r\n      setIsRunning(false);\r\n    };\r\n\r\n    const handleTimeUpdate = (newTime) => {\r\n      if(newTime===0){\r\n        const notifym = new Audio(notify);\r\n        notifym.play()\r\n       }\r\n      setTime(newTime);\r\n    };\r\n    // Clean up socket listeners\r\n    // socket.on(\"visibility\", handleVisibilityChange);\r\n    socket.on(\"start\", handleStart);\r\n    socket.on(\"stop\", handleStop);\r\n    socket.on(\"time\", handleTimeUpdate);\r\n\r\n    fetchData();\r\n\r\n    socket.on(\"users\", (data) => {\r\n      if (isMounted) {\r\n        // Update the state only if the component is still mounted\r\n        const filteredData = data.filter((item) => item.sold_status === 0);\r\n        setList(data);\r\n        setrawList(data);\r\n      }\r\n    });\r\n    socket.on(\"updateIndexes\", ({ startIndex, endIndex }) => {\r\n      // Handle the updated indexes received from the backend\r\n      console.log(\"Received updated indexes:\", startIndex, endIndex);\r\n      setStartIndex(startIndex);\r\n      setEndIndex(endIndex);\r\n      // Perform any necessary operations with the updated indexes\r\n      // Update your frontend UI or execute relevant logic based on the updated indexes\r\n    });\r\n    socket.on(\"checkname\", (data) => {\r\n      if (isMounted) {\r\n        // Update the state only if the component is still mounted\r\n        setCheckedItemName(data);\r\n      }\r\n    });\r\n    socket.on('visibility', (state) => {\r\n      setShowPopup(state);\r\n    });\r\n    socket.on('startIn', (startIndex) => {\r\n      setStartIndex(startIndex);\r\n    });\r\n\r\n    // Listen for 'endIn' event\r\n    socket.on('endIn', (endIndex) => {\r\n      setEndIndex(endIndex);\r\n    });\r\n    return () => {\r\n      isMounted = false; // Set the flag to false when the component is unmounted\r\n      // Remove socket listeners\r\n        socket.off(\"visibility\");\r\n    socket.off(\"updateIndexes\");\r\n    socket.off(\"start\", handleStart);\r\n    socket.off(\"stop\", handleStop);\r\n    socket.off(\"time\", handleTimeUpdate);\r\n    socket.off(\"users\");\r\n    socket.off(\"checkname\");\r\n    socket.off(\"user_toggle\");\r\n      // socket.disconnect();\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    // dispatch(getAuctiondetails());\r\n    // const handleVisibilityChange = (value) => {\r\n    //   setShowPopup(value);\r\n    //   localStorage.setItem(\"isVisible\", value);\r\n    // };\r\n\r\n    const handleStart = () => {\r\n      setIsRunning(true);\r\n    };\r\n\r\n    const handleStop = () => {\r\n      setIsRunning(false);\r\n    };\r\n\r\n    const handleTimeUpdate = (newTime) => {\r\n      setTime(newTime);\r\n    };\r\n\r\n \r\n\r\n    socket.on(\"updateIndexes\", ({ startIndex, endIndex }) => {\r\n      // Handle the updated indexes received from the backend\r\n      console.log(\"Received updated indexes:\", startIndex, endIndex);\r\n      setStartIndex(startIndex);\r\n      setEndIndex(endIndex);\r\n      // Perform any necessary operations with the updated indexes\r\n      // Update your frontend UI or execute relevant logic based on the updated indexes\r\n    });\r\n    \r\n    // socket.on(\"visibility\", handleVisibilityChange);\r\n    socket.on(\"start\", handleStart);\r\n    socket.on(\"stop\", handleStop);\r\n    socket.on(\"time\", handleTimeUpdate);\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      // clearTimeout(timeoutId);\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n      // socket.off(\"visibility\", handleVisibilityChange);\r\n      socket.off(\"start\", handleStart);\r\n      socket.off(\"stop\", handleStop);\r\n      socket.off(\"time\", handleTimeUpdate);\r\n      socket.off(\"updateIndexes\");\r\n      // socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    if (isRunning) {\r\n      // setShowPopup(false)\r\n      const throttledTick = throttle(() => {\r\n        socket.emit(\"tick\");\r\n      }, 1000);\r\n      intervalId = setInterval(throttledTick, 1000);\r\n    } else {\r\n      // setShowPopup(true)\r\n      clearInterval(intervalId); // Clear the interval if isRunning is false\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [isRunning]);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const seconds = (time % 60).toString().padStart(2, \"0\");\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  const filteredData = rawlist.filter((item) => item.buyer === users.link_id);\r\n  const filteredDatabrokers = rawlist.filter(\r\n    (item) => item.brokers === checkedItemid && item.buyer != 0\r\n  );\r\n// messagesection\r\nconst [messages, setMessages] = useState([]);\r\n\r\n\r\nconst fetchLatestMessage = () => {\r\n  axios\r\n    .get(`${API_URL}/messages/latest`) // Replace with your server endpoint\r\n    .then((response) => {\r\n      // console.log(response.data);\r\n      setMessages(response.data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\n// const handleMessageSubmit = (e,message) => {\r\n//   e.preventDefault();\r\n//   const short_name = users.short_name;\r\n//   axios\r\n//     .post(`${API_URL}/messages`, { message ,short_name}) // Replace with your server endpoint\r\n//     .then((response) => {\r\n//       setMessage('');\r\n//       socket.on('newMessage', (message) => {\r\n//         setMessages(message)\r\n//         });\r\n    \r\n//     })\r\n//     .catch((error) => console.log(error));\r\n// };\r\n\r\n\r\n// const [message, setMessage] = useState('');\r\n\r\n  return (\r\n    <>\r\n      {bidloading ? (\r\n        <>\r\n          <div className=\"overlay\">\r\n            <div className=\"spinner-container\">\r\n              <div className=\"spinner\"></div>\r\n              <span>Verifying data...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {loading && users.type !== \"\" ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              height: \"100vh\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ReactLoading\r\n              type={\"spin\"}\r\n              color={\"#007bff\"}\r\n              height={50}\r\n              width={50}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Verifying Data...\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Modal\r\n            title=\"My Lot\"\r\n            onClose={() => setShow(false)}\r\n            show={show}\r\n            filteredData={\r\n              users.type === \"BROKERS\" ? filteredDatabrokers : filteredData\r\n            }\r\n          ></Modal>\r\n\r\n          <div className=\"section-head sec-h\">\r\n            <p className=\"br-n\">={checkedItemName}=</p>\r\n            <div className=\"row newc\">\r\n              <div className=\"col-7 col-md-9 card-btn leftCard\">\r\n                <h2>\r\n                  Auction Date:{\" \"}\r\n                  {auction_data.length === 0 ? \"\" : auction_data[0].date}{\" \"}\r\n                </h2>\r\n                <p>\r\n                  SALE NO - #\r\n                  {auction_data.length === 0 ? \"\" : auction_data[0].sale_no}{\" \"}\r\n               \r\n                </p>\r\n                <p>\r\n                <p>\r\n                  PARTICIPATE - #\r\n                   {activeUsers-1}{\" \"}\r\n                </p>\r\n                  Season - #\r\n                  {auction_data.length === 0 ? \"\" : auction_data[0].season}{\" \"}\r\n                </p>\r\n                <p>\r\n                  CURRENT BROKER :{\" \"}\r\n                  <span className=\"c_brokers\">{checkedItemName}</span>{\" \"}\r\n                </p>\r\n\r\n                <div className=\" row margin-left\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={openLot}\r\n                    className=\"col-5 buttonGroup btn btn-success my-btn\"\r\n                  >\r\n                    My Lot\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-5 col-md-3 align-items-center justify-content-center mt-5 rCard\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"row rightCard\">\r\n                      <div className=\" \">\r\n                        <div className=\"col-md-12 count-t\">\r\n                          <h2 className=\"text-center mh2\">\r\n                            {formatTime(time)}\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-12 name-t\">\r\n                          <h2 className=\"mh2 text-center\">\r\n                            {users.short_name}\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"col-md-12 name-t mh3\">\r\n                        <h4 className=\" text-center\">\r\n                          Total : {list.length} Lot\r\n                        </h4>\r\n                       \r\n                      </div>\r\n                      <div className=\"col-md-12 name-t mh3\">\r\n                      <h4 className=\" text-center\">\r\n                          Current Page : {currentPage} \r\n                        </h4>\r\n                       \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card p-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 col-md-3 d-flex justify-content-start align-items-center\">\r\n     \r\n        </div>\r\n        <div className=\"col-6 col-md-9 d-flex justify-content-end\" style={{paddingRight:'20px'}}>\r\n          <span style={{ backgroundColor: 'black',color:'white', padding: '5px', fontSize: '12px' }}>Last Message</span>\r\n          <span style={{ backgroundColor: 'white',color:'black', padding: '5px', fontSize: '12px' }}>{messages.message}</span>\r\n          <span style={{ backgroundColor: '#6f6fc4',color:'white', padding: '5px', fontSize: '12px' }}>{messages.u_id}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n          {showPopup && users.type === \"BIDDER\" ? (\r\n            <>\r\n              <h2 className=\"text-center  p-h\">-={users.type} PANEL=-</h2>\r\n              <Popup />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h2 className=\"text-center p-h\">-={users.type} PANEL=-</h2>\r\n              <div className=\"table-container con\">\r\n                <div className=\"row g-1 bid-table\">\r\n                  <table id=\"auction\" className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">\r\n                          Lot <br />\r\n                          Invoice\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Factory\r\n                          <br />\r\n                          Grade\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Price\r\n                          <br />\r\n                          Qty\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Highest\r\n                          <br /> Buyer\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Bid</th>\r\n                        <th scope=\"col\">Share</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <LotListComponent\r\n                      handleKeyPress={handleKeyPress}\r\n                        uId={users.link_id}\r\n                        openShareBid={openShareBid}\r\n                        shareBid={shareBid}\r\n                        time={time}\r\n                        list={list}\r\n                        startIndex={startIndex}\r\n                        endIndex={endIndex}\r\n                        users={users}\r\n                        formatTime={formatTime}\r\n                        manualmode={manualmode}\r\n                        selectedIndex={selectedIndex}\r\n                        handleInputChange={handleInputChange}\r\n                        addBid={addBid}\r\n                        handleInc={handleInc}\r\n                        disabledButtons={disabledButtons}\r\n                        setManualmode={setManualmode}\r\n                        setSelectedIndex={setSelectedIndex}\r\n                      />\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"\">\r\n                <div className=\"row\">\r\n                  {list.slice(startIndex-1, endIndex-1 + 0).map((el, index) => (\r\n                   <>\r\n                   <div className=\"col-12 col-md-12\">\r\n                    <div className=\"card\">\r\n                      <div className={el.sold_status===0?\"rem-card-x\":\"rem-card-y\"}>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-8\">\r\n                            <div className=\"col-12\">\r\n                              <p className=\"rem-text\">{el.factory_name} ({el.lot})</p>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                              <p className=\"rem-text\">{el.buyer_name}({el.maximum_bid - el.price})</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className={`col-4 d-flex align-items-center justify-content-center ${el.sold_status === 0 ? 'btcls' : 'btctik'}`}>\r\n \r\n                            <div className=\"row\">\r\n                              <div className=\"col-12 \">\r\n                                <i className={el.sold_status===0?\"bi bi-x-circle \":\"bi bi-check2-circle\"}></i>\r\n                              </div>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                   </>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              </div>\r\n              \r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bidders;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ViewList from \"./auction/Bidders\";\r\n\r\nconst Bidders = () => {\r\n  const history = useNavigate();\r\n \r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const signout = () => {\r\n    sessionStorage.removeItem('token');\r\n    history('/');\r\n  };\r\n  \r\n \r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) {     // If there is no token, the user is not authenticated, so you can redirect them to the desired page\r\n      history('/');\r\n    } else {\r\n      history('/bidders');\r\n    }\r\n  }, []);\r\n  \r\n  // useEffect(() => {\r\n  //   const token = sessionStorage.getItem('token');\r\n  \r\n  //   Axios.get(`${API_URL}/verify`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       if (res.data.Status === \"Success\") {\r\n  //         history(\"/bidders\");\r\n  //       } else {\r\n  //         history(\"/\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error);\r\n  //     });\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n       <section className=\"content-header\">\r\n\r\n</section>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <ViewList />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bidders;\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}